<project name="simplesamlphp" default="simplesamlphp:htaccess">

    <target name="simplesamlphp:install" description="Installs simplesamlphp library and modules.">
        <phingcall target="simplesamlphp:htaccess"/>
    </target>

    <target name="simplesamlphp:symlink" description="Creates a symbolic link to the web accessible directory in the simplesamlphp library">
        <echo>Creating a symbolic link from ${docroot}/simplesaml to web accessible directory in the simplesamlphp library</echo>
        <symlink target="${repo.root}/simplesamlphp/www" link="${docroot}/simplesaml" />
    </target>

    <target name="simplesamlphp:htaccess" description="Manual changes that must be done.">
    <echo>
     ******************************************************************************
     ******************************************************************************
     *****                                                                    *****
     *****      Manual configuration needed to complete the installation.     *****
     *****                                                                    *****
     ******************************************************************************
     ******************************************************************************

      To complete the setup you must manually modify your .htaccess file by adding
      the 2 lines with the + signs in the snippet below.
    </echo>
    <echo>

      # Copy and adapt this rule to directly execute PHP files in contributed or
      # custom modules or to run another PHP application in the same directory.
      RewriteCond %{REQUEST_URI} !/core/modules/statistics/statistics.php$
    + # Allow access to simplesaml paths
    + RewriteCond %{REQUEST_URI} !^/simplesaml
      # Deny access to any other PHP files that do not match the rules above.
      RewriteRule "^.+/.*\.php$" - [F]

    </echo>
    </target>

  <!-- Add description -->
  <target name="simplesamlphp:deploy:config" description="Copies config template files to the appropriate place in simplesamlphp library.">
    <echo>Copying config files to the appropriate place in simplesamlphp library.</echo>
    <copy file="${repo.root}/simplesamlphp/config/config.php" tofile="${repo.root}/deploy/vendor/simplesamlphp/simplesamlphp/config/config.php" overwrite="true"/>
    <copy file="${repo.root}/simplesamlphp/config/authsources.php" tofile="${repo.root}/deploy/vendor/simplesamlphp/simplesamlphp/config/authsources.php" overwrite="true"/>
    <copy file="${repo.root}/simplesamlphp/metadata/saml20-idp-remote.php" tofile="${repo.root}/deploy/vendor/simplesamlphp/simplesamlphp/metadata/saml20-idp-remote.php" overwrite="true"/>
    <copy file="${repo.root}/vendor/acquia/simplesamlphp/gitignore.txt" tofile="${repo.root}/deploy/vendor/simplesamlphp/simplesamlphp/.gitignore" overwrite="true"/>
  </target>

  <target name="simplesamlphp:build:config" description="Copies config template files to the appropriate place in simplesamlphp library.">
    <echo>Copying config files to the appropriate place in simplesamlphp library.</echo>
    <copy file="${repo.root}/simplesamlphp/config/config.php" tofile="${repo.root}/vendor/simplesamlphp/simplesamlphp/config/config.php" overwrite="true"/>
    <copy file="${repo.root}/simplesamlphp/config/authsources.php" tofile="${repo.root}/vendor/simplesamlphp/simplesamlphp/config/authsources.php" overwrite="true"/>
    <copy file="${repo.root}/simplesamlphp/metadata/saml20-idp-remote.php" tofile="${repo.root}/vendor/simplesamlphp/simplesamlphp/metadata/saml20-idp-remote.php" overwrite="true"/>
    <copy file="${repo.root}/vendor/acquia/simplesamlphp/gitignore.txt" tofile="${repo.root}/vendor/simplesamlphp/simplesamlphp/.gitignore" overwrite="true"/>
  </target>

  <target name="deploy:build" description="Overrides Generates a deploy-ready build in deploy.dir."
          depends="frontend, deploy:copy, deploy:composer:install, deploy:sanitize">
    <phingcall target="simplesamlphp:deploy:config"/>
    <!-- If we are using ACSF, run the ACSF Deploy command. -->
    <if>
      <equals arg1="${hosting}" arg2="acsf"/>
      <then>
        <phingcall target="deploy:acsf:init"/>
      </then>
    </if>
  </target>

  <target name="setup:build" description="Overrides Generates all required files for a full build. E.g., (re)builds docroot, etc."
          depends="setup:git-hooks, setup:drupal:settings, setup:behat, setup:composer:install, frontend">

    <phingcall target="simplesamlphp:build:config"/>
    <phingcall target="target-hook:invoke">
      <property name="hook-name" value="post-setup-build"/>
    </phingcall>

  </target>


</project>

